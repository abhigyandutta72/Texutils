{"ast":null,"code":"import _slicedToArray from\"C:/LEARNING/Backend webD/reactcourse/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import About from'./components/About';import React,{useState}from'react';import Alert from'./components/Alert';import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// Whether dark mode is enabled or not\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#042743';showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode},new Date()),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",children:/*#__PURE__*/_jsx(About,{mode:mode})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Try TextUtils\",mode:mode})})]})})]})});}export default App;","map":{"version":3,"names":["Navbar","TextForm","About","React","useState","Alert","BrowserRouter","Router","Switch","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","Date","className","exact","path","heading"],"sources":["C:/LEARNING/Backend webD/reactcourse/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;"],"mappings":"0HAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KAAK,KACA,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAG1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAwBb,QAAQ,CAAC,OAAO,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAuB;AAC3C,IAAAI,UAAA,CAA0BlB,QAAQ,CAAC,IAAI,CAAC,CAAAmB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAG,CAC/BH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACbL,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAED,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAO,CACrB,GAAGX,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IACG,CACFL,OAAO,CAAC,OAAO,CAAC,CAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CACD,mBACEf,IAAA,CAAAI,SAAA,EAAAqB,QAAA,cACAvB,KAAA,CAACN,MAAM,EAAA6B,QAAA,eACPzB,IAAA,CAACX,MAAM,EAACqC,KAAK,CAAC,WAAW,CAACjB,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEA,UAAW,EAAM,GAAI,CAAAO,IAAI,EAAE,CAAI,cACjF3B,IAAA,CAACN,KAAK,EAACmB,KAAK,CAAEA,KAAM,EAAE,cACtBb,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAC/BvB,KAAA,CAACL,MAAM,EAAA4B,QAAA,eAGDzB,IAAA,CAACF,KAAK,EAAC+B,KAAK,MAACC,IAAI,CAAC,QAAQ,CAAAL,QAAA,cACxBzB,IAAA,CAACT,KAAK,EAACkB,IAAI,CAAEA,IAAK,EAAG,EACf,cACRT,IAAA,CAACF,KAAK,EAAC+B,KAAK,MAACC,IAAI,CAAC,GAAG,CAAAL,QAAA,cACnBzB,IAAA,CAACV,QAAQ,EAACyB,SAAS,CAAEA,SAAU,CAACgB,OAAO,CAAC,eAAe,CAACtB,IAAI,CAAEA,IAAK,EAAE,EAC/D,GACL,EACH,GACG,EACN,CAEP,CAEA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}